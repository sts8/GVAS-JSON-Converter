import test from "node:test";
import assert from "node:assert/strict";

import SavReader from "../../../src/converter/sav-reader.js";
import StructProperty from "../../../src/converter/properties/StructProperty.js";

test("StructProperty - DateTime", () => {

    const bytes = new Uint8Array([
        /* name length (9) */         0x09, 0x00, 0x00, 0x00,
        /* name ("SaveTime") */       0x53, 0x61, 0x76, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x00,

        /* type length (15) */        0x0F, 0x00, 0x00, 0x00,
        /* type ("StructProperty") */ 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00,

        /* content length (8) */      0x08, 0x00, 0x00, 0x00,

        /* padding */                 0x00, 0x00, 0x00, 0x00,

        /* subtype length (9) */      0x09, 0x00, 0x00, 0x00,
        /* subtype ("DateTime") */    0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x00,

        /* padding */                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        /* padding */                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

        /* content start marker */    0x00,

        /* value */                   0x50, 0x2C, 0xE2, 0x18, 0x03, 0x92, 0xDB, 0x08
    ]);

    const someStructProperty = new SavReader(bytes.buffer).readProperty();
    assert.ok(someStructProperty instanceof StructProperty, "should be StructProperty");
    assert.strictEqual(someStructProperty.name, "SaveTime");
    assert.strictEqual(someStructProperty.subtype, "DateTime");
    assert.strictEqual(someStructProperty.value, 638264314203090000n);
    assert.deepStrictEqual(someStructProperty.toBytes(), bytes);
});

test("StructProperty - DateTime 2", () => {

    const bytes = new Uint8Array([
        0x09, 0x00, 0x00, 0x00,
        0x47, 0x61, 0x6D, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x00,

        0x0F, 0x00, 0x00, 0x00,
        0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00,

        0x08, 0x00, 0x00, 0x00,

        0x00, 0x00, 0x00, 0x00,

        0x09, 0x00, 0x00, 0x00,
        0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6D, 0x65, 0x00,

        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,

        0x00,

        0xB8, 0x9B, 0x73, 0x22, 0x2C, 0x00, 0x00, 0x00
    ]);

    const someStructProperty = new SavReader(bytes.buffer).readProperty();
    assert.ok(someStructProperty instanceof StructProperty, "should be StructProperty");
    assert.strictEqual(someStructProperty.name, "GameTime");
    assert.strictEqual(someStructProperty.subtype, "DateTime");
    assert.strictEqual(someStructProperty.value, 189556562872n);
    assert.deepStrictEqual(someStructProperty.toBytes(), bytes);
});

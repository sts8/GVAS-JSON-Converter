import test from "node:test";
import assert from "node:assert/strict";

import SavReader from "../../../src/converter/sav-reader.js";
import StrProperty from "../../../src/converter/properties/StrProperty.js";
import SavWriter from "../../../src/converter/sav-writer.js";

test("StrProperty", () => {
    const data = new Uint8Array([
        /* name length (13) */      0x0D, 0x00, 0x00, 0x00,
        /* name ("TutorialName") */ 0x54, 0x75, 0x74, 0x6F, 0x72, 0x69, 0x61, 0x6C, 0x4E, 0x61, 0x6D, 0x65, 0x00,

        /* type length (12) */      0x0C, 0x00, 0x00, 0x00,
        /* type ("StrProperty") */  0x53, 0x74, 0x72, 0x50, 0x72, 0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00,

        /* content length (57) */   0x39, 0x00, 0x00, 0x00,

        /* padding */               0x00, 0x00, 0x00, 0x00,

        /* content start marker */  0x00,

        /* value length (53) */     0x35, 0x00, 0x00, 0x00,
        /* value ("Tutorial_Hint_PlagueWarning_SporeTowerCleaning_Bosco") */
        0x54, 0x75, 0x74, 0x6F, 0x72, 0x69, 0x61, 0x6C, 0x5F, 0x48,
        0x69, 0x6E, 0x74, 0x5F, 0x50, 0x6C, 0x61, 0x67, 0x75, 0x65,
        0x57, 0x61, 0x72, 0x6E, 0x69, 0x6E, 0x67, 0x5F, 0x53, 0x70,
        0x6F, 0x72, 0x65, 0x54, 0x6F, 0x77, 0x65, 0x72, 0x43, 0x6C,
        0x65, 0x61, 0x6E, 0x69, 0x6E, 0x67, 0x5F, 0x42, 0x6F, 0x73,
        0x63, 0x6F, 0x00
    ]);

    const property = new SavReader(data.buffer).readProperty();
    assert.ok(property instanceof StrProperty, "property should be StrProperty");
    assert.strictEqual(property.name, "TutorialName");
    assert.strictEqual(property.value, "Tutorial_Hint_PlagueWarning_SporeTowerCleaning_Bosco");

    const writer = new SavWriter(property.getByteSize());
    property.write(writer);

    assert.deepStrictEqual(writer.array, data);
});

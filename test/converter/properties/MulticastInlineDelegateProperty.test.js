import {test} from 'node:test';
import assert from 'node:assert/strict';

import SavReader from '../../../src/converter/sav-reader.js';
import {MulticastInlineDelegateProperty} from '../../../src/converter/properties/index.js';
import SavWriter from '../../../src/converter/sav-writer.js';

test('MulticastInlineDelegateProperty', () => {
    const data = new Uint8Array([
        0x1B, 0x00, 0x00, 0x00, 0x4F, 0x6E, 0x57, 0x65, 0x61, 0x70, 0x6F, 0x6E,
        0x4D, 0x61, 0x69, 0x6E, 0x74, 0x65, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x43,
        0x68, 0x61, 0x6E, 0x67, 0x65, 0x64, 0x00, 0x20, 0x00, 0x00, 0x00, 0x4D,
        0x75, 0x6C, 0x74, 0x69, 0x63, 0x61, 0x73, 0x74, 0x49, 0x6E, 0x6C, 0x69,
        0x6E, 0x65, 0x44, 0x65, 0x6C, 0x65, 0x67, 0x61, 0x74, 0x65, 0x50, 0x72,
        0x6F, 0x70, 0x65, 0x72, 0x74, 0x79, 0x00, 0x2A, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x69, 0x00, 0x00, 0x00,
        0x2F, 0x45, 0x6E, 0x67, 0x69, 0x6E, 0x65, 0x2F, 0x54, 0x72, 0x61, 0x6E,
        0x73, 0x69, 0x65, 0x6E, 0x74, 0x2E, 0x47, 0x61, 0x6D, 0x65, 0x45, 0x6E,
        0x67, 0x69, 0x6E, 0x65, 0x5F, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x32,
        0x35, 0x39, 0x33, 0x3A, 0x42, 0x50, 0x5F, 0x47, 0x61, 0x6D, 0x65, 0x49,
        0x6E, 0x73, 0x74, 0x61, 0x6E, 0x63, 0x65, 0x5F, 0x43, 0x5F, 0x32, 0x31,
        0x34, 0x37, 0x34, 0x38, 0x32, 0x35, 0x37, 0x39, 0x2E, 0x43, 0x6F, 0x6E,
        0x73, 0x6F, 0x6C, 0x65, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6E, 0x5F, 0x53,
        0x65, 0x61, 0x73, 0x6F, 0x6E, 0x30, 0x31, 0x5F, 0x43, 0x5F, 0x32, 0x31,
        0x34, 0x37, 0x32, 0x32, 0x31, 0x36, 0x35, 0x35, 0x00, 0x1B, 0x00, 0x00,
        0x00, 0x4F, 0x6E, 0x57, 0x65, 0x61, 0x70, 0x6F, 0x6E, 0x4D, 0x61, 0x69,
        0x6E, 0x74, 0x65, 0x6E, 0x61, 0x6E, 0x63, 0x65, 0x43, 0x68, 0x61, 0x6E,
        0x67, 0x65, 0x64, 0x00, 0x80, 0x00, 0x00, 0x00, 0x2F, 0x45, 0x6E, 0x67,
        0x69, 0x6E, 0x65, 0x2F, 0x54, 0x72, 0x61, 0x6E, 0x73, 0x69, 0x65, 0x6E,
        0x74, 0x2E, 0x47, 0x61, 0x6D, 0x65, 0x45, 0x6E, 0x67, 0x69, 0x6E, 0x65,
        0x5F, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38, 0x32, 0x35, 0x39, 0x33, 0x3A,
        0x42, 0x50, 0x5F, 0x47, 0x61, 0x6D, 0x65, 0x49, 0x6E, 0x73, 0x74, 0x61,
        0x6E, 0x63, 0x65, 0x5F, 0x43, 0x5F, 0x32, 0x31, 0x34, 0x37, 0x34, 0x38,
        0x32, 0x35, 0x37, 0x39, 0x2E, 0x4D, 0x65, 0x6E, 0x75, 0x5F, 0x53, 0x65,
        0x61, 0x73, 0x6F, 0x6E, 0x73, 0x5F, 0x43, 0x5F, 0x32, 0x31, 0x34, 0x37,
        0x32, 0x31, 0x31, 0x38, 0x30, 0x33, 0x2E, 0x57, 0x69, 0x64, 0x67, 0x65,
        0x74, 0x54, 0x72, 0x65, 0x65, 0x2E, 0x57, 0x4E, 0x44, 0x5F, 0x57, 0x65,
        0x61, 0x70, 0x6F, 0x6E, 0x4D, 0x61, 0x69, 0x6E, 0x74, 0x65, 0x6E, 0x61,
        0x6E, 0x63, 0x65, 0x00, 0x12, 0x00, 0x00, 0x00, 0x4F, 0x6E, 0x53, 0x61,
        0x76, 0x65, 0x67, 0x61, 0x6D, 0x65, 0x43, 0x68, 0x61, 0x6E, 0x67, 0x65,
        0x64, 0x00
    ]);

    const property = new SavReader(data.buffer).readProperty();
    assert(property instanceof MulticastInlineDelegateProperty);
    assert.strictEqual(property.name, 'OnWeaponMaintenanceChanged');
    assert.strictEqual(property.elements.length, 2);

    assert.deepStrictEqual(property.elements[0], [
        '/Engine/Transient.GameEngine_2147482593:BP_GameInstance_C_2147482579.ConsoleScreen_Season01_C_2147221655',
        'OnWeaponMaintenanceChanged'
    ]);

    assert.deepStrictEqual(property.elements[1], [
        '/Engine/Transient.GameEngine_2147482593:BP_GameInstance_C_2147482579.Menu_Seasons_C_2147211803.WidgetTree.WND_WeaponMaintenance',
        'OnSavegameChanged'
    ]);

    const writer = new SavWriter(property.getByteSize());
    property.write(writer);

    assert.deepStrictEqual(writer.array, data);
});
